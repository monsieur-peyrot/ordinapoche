# RACINE CARREE ENTIERE

# Ce programme attend un nombre N sur le ruban d'entree
# Il renvoie la racine carree entiere de N sur le ruban de sortie
# L'adresse d'execution est 10
# L'adresse 00 doit contenir la valeur 000, l'adresse 01 la valeur 001, l'adresse 02 la valeur 031
# Le programme utilise les adresses memoires 03, 04, 60, 61 et 62
# L'adresse 03 contient le nombre N
# L'adresse 04 contient un compteur i qui va de 1 à 31 (31 = isqrt(999))
# Pour le sous-programme MULTIPLICATION :
# L'adresse 60 contient le premier nombre à multiplier
# L'adresse 61 contient le deuxième nombre à multiplier
# L'adresse 62 contient le résultat de la multiplication

# DATAS
ADR 00
VAL 000
VAL 001
VAL 031

# PROG PRINCIPAL
ADR 10
INP 03
# On initialise le compteur i à 1
CLA 01
STO 04
# Adresse 13 : on met le compteur en 60 (premier nombre à multiplier) et en 61 (deuxième nombre à multiplier)
CLA 04
STO 60
STO 61
# On appelle le sous-programme MULTIPLICATION
JMP 40
# Adresse 17 : on effectue le calcul N - i ** 2
CLA 03
SUB 62
# Si le résultat est négatif, on saute à l'adresse 26
TAC 27
# On incrémente le compteur i
CLA 04
ADD 01
STO 04
# On effectue le calcul 31 - i
CLA 02
SUB 04
# Si le résultat est négatif, on saute à l'adresse 26
TAC 27
JMP 13
# Adresse 27 : on décrémente de 1 le compteur puis on écrit le résultat sur le ruban de sortie
CLA 04
SUB 01
STO 04
OUT 04
HRS

# SOUS-PROGRAMME MULTIPLICATION
ADR 40
# On met le résultat de la multiplication (62) à zéro
CLA 00
STO 62
# On diminue de 1 le multiplicateur (61)
CLA 61
SUB 01
STO 61
# Adresse 45 : On ajoute le multiplicande (60) au résultat de la multiplication (62)
CLA 62
ADD 60
STO 62
# On diminue de 1 le multiplicateur (61)
CLA 61
SUB 01
# Si le résultat est négatif, on saute à l'adresse 53
TAC 53
# Sinon on stocke la nouvelle valeur du multiplicateur
STO 61
# et on recommence à l'adresse 45
JMP 45
# On retourne au programme principal, à l'adresse 17
JMP 17